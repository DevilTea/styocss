import type { StyoPluginContext } from './types'

export function generateDtsContent({
	ctx: {
		engine,
		autoJoin,
		nameOfStyoFn,
	},
	hasVue,
}: {
	ctx: StyoPluginContext
	hasVue: boolean
}) {
	const aliasForNestedList = [
		...engine.staticAliasForNestedRuleList.map(({ alias }) => alias),
		...engine.dynamicAliasForNestedRuleList.flatMap(({ predefined }) => predefined),
	].map(alias => `'${alias}'`)
	const aliasForNestedTemplateList = [
		...engine.dynamicAliasForNestedRuleList.flatMap(({ template }) => template),
	].map(template => `'${template}'`)
	const aliasForSelectorList = [
		...engine.staticAliasForSelectorRuleList.map(({ alias }) => alias),
		...engine.dynamicAliasForSelectorRuleList.flatMap(({ predefined }) => predefined),
	].map(alias => `'${alias}'`)
	const aliasForSelectorTemplateList = [
		...engine.dynamicAliasForSelectorRuleList.flatMap(({ template }) => template),
	].map(template => `'${template}'`)
	const shortcutList = [
		...engine.staticShortcutRuleList.map(({ name }) => name),
		...engine.dynamicShortcutRuleList.flatMap(({ predefined }) => predefined),
	].map(name => `'${name}'`)
	const shortcutTemplateList = [
		...engine.dynamicShortcutRuleList.flatMap(({ template }) => template),
	].map(template => `'${template}'`)

	const lines = []
	lines.push(...[
		'// Auto-generated by @styocss/vite-plugin-styocss',
		'import type { StyoEngine } from \'@styocss/vite-plugin-styocss\'',
		'',
		'type _StyoFn = StyoEngine<',
    `  /* AliasForNested */ ${aliasForNestedList.length > 0 ? aliasForNestedList.join(' | ') : 'never'},`,
    `  /* AliasForNestedTemplate */ ${aliasForNestedTemplateList.length > 0 ? aliasForNestedTemplateList.join(' | ') : 'never'},`,
    `  /* AliasForSelector */ ${aliasForSelectorList.length > 0 ? aliasForSelectorList.join(' | ') : 'never'},`,
    `  /* AliasForSelectorTemplate */ ${aliasForSelectorTemplateList.length > 0 ? aliasForSelectorTemplateList.join(' | ') : 'never'},`,
    `  /* Shortcut */ ${shortcutList.length > 0 ? shortcutList.join(' | ') : 'never'},`,
    `  /* ShortcutTemplate */ ${shortcutTemplateList.length > 0 ? shortcutTemplateList.join(' | ') : 'never'},`,
    '>[\'styo\']',
    '',
	])

	if (autoJoin) {
		lines.push(...[
			'type StyoFn = (...params: Parameters<_StyoFn>) => string',
			'',
		])
	}
	else {
		lines.push(...[
			'type StyoFn = _StyoFn',
			'',
		])
	}

	lines.push(...[
		'declare global {',
    `  const ${nameOfStyoFn}: StyoFn`,
    '}',
    '',
	])

	if (hasVue) {
		lines.push(...[
			'declare module \'vue\' {',
			'  interface ComponentCustomProperties {',
      `    ${nameOfStyoFn}: StyoFn`,
      '  }',
      '}',
      '',
		])
	}

	return lines.join('\n')
}
